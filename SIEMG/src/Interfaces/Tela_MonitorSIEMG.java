/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import Monitoramento.MonitorStatus;
import Monitoramento.Monitoramento;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Map;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.Timer;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import Alertas.Alerta;

/**
 *
 * @author vitor.araujo
 */
public class Tela_MonitorSIEMG extends javax.swing.JInternalFrame {

    private Monitoramento monitor;
    private Color corlinha;

    /**
     * Creates new form Tela_MonitorSIEMG
     */
    public Tela_MonitorSIEMG() {
        monitor = Monitoramento.getInstancia();
        initComponents();
    }

    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    private void atualizarTabeladeEventos() {

        DefaultTableModel tbEventos = (DefaultTableModel) jTMonitorEventos.getModel();
        
        //tbEventos.getDataVector().removeAllElements();
        while (tbEventos.getRowCount() > 0) {
            tbEventos.removeRow(0);
        }

        for (Map.Entry<Integer, Alerta> evento : monitor.getListEvento().entrySet()) {

            String[] infoEvt = {evento.getValue().getIndice().toString(), evento.getValue().getTitle(), evento.getValue().getStatus().toString()};
            tbEventos.addRow(infoEvt);

        }
    }

    private Monitoramento obterMonitor() {

        return monitor;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTMonitorEventos = new javax.swing.JTable();

        setClosable(true);
        setTitle("Monitor SIEMG");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jButton1.setText("Iniciar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Visualizar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setText("Restart");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton2, jButton3});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jButton2))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jTMonitorEventos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Evento", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTMonitorEventos);
        if (jTMonitorEventos.getColumnModel().getColumnCount() > 0) {
            jTMonitorEventos.getColumnModel().getColumn(0).setHeaderValue("Id");
            jTMonitorEventos.getColumnModel().getColumn(1).setHeaderValue("Evento");
            jTMonitorEventos.getColumnModel().getColumn(2).setHeaderValue("Status");
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 923, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (jTMonitorEventos.getSelectedRow() != -1) {
            DefaultTableModel tbEventos = (DefaultTableModel) jTMonitorEventos.getModel();
            int id = Integer.parseInt(tbEventos.getValueAt(jTMonitorEventos.getSelectedRow(), 0).toString());

            for (Map.Entry<Integer, Alerta> evento : monitor.getListEvento().entrySet()) {

                if (evento.getKey().equals(id)) {
                    
                    if(evento.getValue().getStatus() == MonitorStatus.DESLIGADO)
                        monitor.startEvento(id);
                    else
                        JOptionPane.showMessageDialog(null, "Alerta já foi inicializado!");
                    
                }

            }

        } else {
            JOptionPane.showMessageDialog(null, "Selecione um alerta para inicializar");
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened

        jTMonitorEventos.setDefaultRenderer(Object.class, new RenderSIEMG());        
        
        atualizarTabeladeEventos();
        Timer timer = new Timer(5 * 1000, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                atualizarTabeladeEventos();
            }
        });
        timer.start();


    }//GEN-LAST:event_formInternalFrameOpened

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        if (jTMonitorEventos.getSelectedRow() != -1) {

            DefaultTableModel tbEventos = (DefaultTableModel) jTMonitorEventos.getModel();
            int id = Integer.parseInt(tbEventos.getValueAt(jTMonitorEventos.getSelectedRow(), 0).toString());

            for (Map.Entry<Integer, Alerta> evento : monitor.getListEvento().entrySet()) {

                if (evento.getKey().equals(id)) {

                    JDesktopPane jDeskinterno = this.getDesktopPane();
                    Tela_Resultados telaresultado = new Tela_Resultados(evento.getValue().getListaResultados());
                    jDeskinterno.add(telaresultado);
                    telaresultado.setPosicao();
                    telaresultado.setVisible(Boolean.TRUE);

                }

            }

        } else {
            JOptionPane.showMessageDialog(null, "Selecione um alerta para visualizar resultados");
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
          if (jTMonitorEventos.getSelectedRow() != -1) {

            DefaultTableModel tbEventos = (DefaultTableModel) jTMonitorEventos.getModel();
            int id = Integer.parseInt(tbEventos.getValueAt(jTMonitorEventos.getSelectedRow(), 0).toString());

            for (Map.Entry<Integer, Alerta> evento : monitor.getListEvento().entrySet()) {

                if (evento.getKey().equals(id)) {
                    
                    if(evento.getValue().getStatus() == MonitorStatus.DISPARADO)
                        monitor.restartEvento(id);
                    else
                        JOptionPane.showMessageDialog(null, "Alerta não foi disparado!");

                }

            }

        } else {
            JOptionPane.showMessageDialog(null, "Selecione um alerta para restartar");
        }
        
        
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTMonitorEventos;
    // End of variables declaration//GEN-END:variables

    private class RenderSIEMG extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) {

            super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, col);

            String status = (String) jTMonitorEventos.getModel().getValueAt(row, 2);

            if (status.equals(MonitorStatus.DESLIGADO.toString())) {                
                setForeground(Color.BLACK);
                setBackground(Color.WHITE);

            } else if (status.equals(MonitorStatus.LIGADO.toString())) {                
                setForeground(Color.BLACK);
                setBackground(Color.GREEN);

            } else if (status.equals(MonitorStatus.DISPARADO.toString())) {                
                setForeground(Color.WHITE);
                setBackground(Color.RED);
            }

            return this;
        }

    }

}
