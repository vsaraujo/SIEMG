/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import Alertas.AlertaAuteSimples;
import Funcionalidades.TimeSIEMG;
import Monitoramento.Monitoramento;
import Parametros.Campos;
import Parametros.GrupoParametros;
import Parametros.Operadores;
import Parametros.Parametro;
import java.awt.Dimension;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Alertas.Alerta;
import Alertas.AlertaTipo;

/**
 *
 * @author Vítor
 */
public class Tela_GerenciarAlertas extends javax.swing.JInternalFrame {

    private static int indice;
    private final Monitoramento monitor;

    /**
     * Creates new form CriarEvento
     */
    public Tela_GerenciarAlertas() {
        monitor = Monitoramento.getInstancia();
        initComponents();
    }

    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTNomeEvento = new javax.swing.JTextField();
        jTIntervalo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jCTipoEvento = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Alertas = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jPCampos = new javax.swing.JPanel();
        jCCampo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jCOperador = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jTValor = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_Parametros = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setTitle("Gerenciar Alertas");
        setToolTipText("");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("Nome do alerta:");

        jLabel2.setText("Intervalo de execução (segundos):");

        jCTipoEvento.setModel(new DefaultComboBoxModel(AlertaTipo.values()));
        jCTipoEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCTipoEventoActionPerformed(evt);
            }
        });

        jLabel1.setText("Tipo de alerta:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Informações do alerta:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTNomeEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTIntervalo, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCTipoEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(89, 89, 89))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jTIntervalo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTNomeEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jCTipoEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTable_Alertas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IdEvento", "Nome"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable_Alertas);
        if (jTable_Alertas.getColumnModel().getColumnCount() > 0) {
            jTable_Alertas.getColumnModel().getColumn(0).setPreferredWidth(1);
        }

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("Alertas:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(0, 183, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPCampos.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jCCampo.setModel(new DefaultComboBoxModel(Campos.values()));

        jLabel5.setText("Escolha o campo:");

        jCOperador.setModel(new DefaultComboBoxModel(Operadores.values()));

        jLabel6.setText("Escolha o operador:");

        jLabel7.setText("Valor do filtro:");

        jButton5.setText("Inserir filtro");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setText("Excluir filttro");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Filtros do alerta:");

        javax.swing.GroupLayout jPCamposLayout = new javax.swing.GroupLayout(jPCampos);
        jPCampos.setLayout(jPCamposLayout);
        jPCamposLayout.setHorizontalGroup(
            jPCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCamposLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPCamposLayout.createSequentialGroup()
                        .addGroup(jPCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jCCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jCOperador, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jTValor, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPCamposLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPCamposLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPCamposLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jCCampo, jCOperador, jTValor});

        jPCamposLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton5, jButton7});

        jPCamposLayout.setVerticalGroup(
            jPCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCamposLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(jPCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCOperador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTable_Parametros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Campo", "Operador", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable_Parametros);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Cadastrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setText("Editar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setText("Excluir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Salvar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton2, jButton3, jButton4});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPCampos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4)
                    .addComponent(jButton2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3)
                        .addComponent(jButton1)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton1, jButton2, jButton3, jButton4});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCTipoEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCTipoEventoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCTipoEventoActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        if (jTable_Parametros.getSelectedRow() != -1) {
            DefaultTableModel tbParametros = (DefaultTableModel) jTable_Parametros.getModel();
            tbParametros.removeRow(jTable_Parametros.getSelectedRow());
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um parâmetro para excluir");
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        String[] dados = {jCCampo.getSelectedItem().toString(), jCOperador.getSelectedItem().toString(), jTValor.getText()};
        inserirDadosNaTabela(dados, (DefaultTableModel) jTable_Parametros.getModel());


    }//GEN-LAST:event_jButton5ActionPerformed

    @SuppressWarnings("empty-statement")
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        int idx = 0;
        int timenum = 0;

        try {
            timenum = Integer.parseInt(jTIntervalo.getText());

            TimeSIEMG time = new TimeSIEMG(timenum);
            GrupoParametros gpparam = new GrupoParametros();
            Alerta evento = null;

            Map<Integer, List> map = new HashMap<>();

            for (int i = 0; i < jTable_Parametros.getRowCount(); i++) {

                List<Object> linhas = new ArrayList<>();

                for (int j = 0; j < jTable_Parametros.getColumnCount(); j++) {

                    linhas.add(jTable_Parametros.getValueAt(i, j).toString());
                    System.out.print(linhas.get(j));
                }
                System.out.println("=====");
                map.put(idx, linhas);
                idx++;

            }

            for (Integer ind : map.keySet()) {

                List<String> liststrg = new ArrayList<>();
                liststrg = map.get(ind);
                System.out.println("Valor do campo =" + liststrg.get(0));
                System.out.println("Valor do operador =" + liststrg.get(1));
                Campos cmp = Campos.valueOf(liststrg.get(0));
                Operadores op = Operadores.valueOf(liststrg.get(1));
                String vlr = (String) liststrg.get(2);

                System.out.println("valor do Operador = " + op);
                Parametro param = new Parametro(cmp, op, vlr);
                gpparam.setParametro(param);

            }

            try {

                switch (jCTipoEvento.getSelectedIndex()) {

                    //AlertaTipo.AUTENTICACAO_SIMPLES
                    case 0:
                        System.out.println("Indice 1!!!");
                        System.out.println("Evento AuteSimultanea criado!!!");
                        evento = new AlertaAuteSimples(time, indice);
                        break;
                }

            } catch (IOException ex) {
                Logger.getLogger(Tela_GerenciarAlertas.class.getName()).log(Level.SEVERE, null, ex);
            }

            evento.setParametros(gpparam);
            System.out.println("Parametro setado");
            evento.setTitle(jTNomeEvento.getText());

            monitor.anexarEvento(evento);
            System.out.println("Evento Anexando...");

            DefaultTableModel tbEventos = (DefaultTableModel) jTable_Alertas.getModel();
            String[] infoEvt = {evento.getIndice().toString(), evento.getTitle()};
            tbEventos.addRow(infoEvt);
            indice++;

            limparcampos();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Intervalo de execução(segundos) inválido.");

        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void limparcampos() {

        DefaultTableModel tbParam = (DefaultTableModel) jTable_Parametros.getModel();

        while (tbParam.getRowCount() > 0) {
            tbParam.removeRow(0);
        }

        jTIntervalo.setText("");
        jCTipoEvento.setSelectedIndex(0);
        jCOperador.setSelectedIndex(0);
        jTNomeEvento.setText("");
        jTValor.setText("");

    }
    
    private void atualizarTabelaAlertas() {
        
        DefaultTableModel tbAlertas = (DefaultTableModel) jTable_Alertas.getModel();
        
        while (tbAlertas.getRowCount() > 0) {
            tbAlertas.removeRow(0);
        }
        
        for (Map.Entry<Integer, Alerta> alerta : monitor.getListEvento().entrySet()) {
        
            String[] dados = {alerta.getValue().getIndice().toString(), alerta.getValue().getTitle()};
            inserirDadosNaTabela(dados, tbAlertas);
            
        }
    }

    private void preenchercampos(Alerta alerta) {

        limparcampos();

        DefaultTableModel tbParam = (DefaultTableModel) jTable_Parametros.getModel();

        GrupoParametros grp = alerta.getParametros();

        for (Map.Entry<Integer, Parametro> idParam : grp.getMapParametros().entrySet()) {

            Parametro tmparam = idParam.getValue();
            String[] dados = {tmparam.getCampo().toString(), tmparam.getOperador().toString(), tmparam.getValor()};
            inserirDadosNaTabela(dados, (DefaultTableModel) jTable_Parametros.getModel());

        }
        jTNomeEvento.setText(alerta.getTitle());
        jTIntervalo.setText(Integer.toString(alerta.getIntervalo().getJanela()));
        jCTipoEvento.setSelectedIndex(alerta.getTipo().ordinal());

    }
    
    private void salvarAlerta(Alerta alerta) {
        
        int idx = 0;
        int timenum = 0;

        try {
            timenum = Integer.parseInt(jTIntervalo.getText());

            TimeSIEMG time = new TimeSIEMG(timenum);
            GrupoParametros gpparam = new GrupoParametros();
            Alerta evento = null;

            Map<Integer, List> map = new HashMap<>();

            for (int i = 0; i < jTable_Parametros.getRowCount(); i++) {

                List<Object> linhas = new ArrayList<>();

                for (int j = 0; j < jTable_Parametros.getColumnCount(); j++) {

                    linhas.add(jTable_Parametros.getValueAt(i, j).toString());
                    System.out.print(linhas.get(j));
                }
                System.out.println("=====");
                map.put(idx, linhas);
                idx++;

            }

            for (Integer ind : map.keySet()) {

                List<String> liststrg = new ArrayList<>();
                liststrg = map.get(ind);
                System.out.println("Valor do campo =" + liststrg.get(0));
                System.out.println("Valor do operador =" + liststrg.get(1));
                Campos cmp = Campos.valueOf(liststrg.get(0));
                Operadores op = Operadores.valueOf(liststrg.get(1));
                String vlr = (String) liststrg.get(2);

                System.out.println("valor do Operador = " + op);
                Parametro param = new Parametro(cmp, op, vlr);
                gpparam.setParametro(param);

            }

            try {

                switch (jCTipoEvento.getSelectedIndex()) {

                    /*
                     * Criação do alerta do tipo = AlertaTipo.AUTENTICACAO_SIMPLES
                     */                    
                    case 0:
                        System.out.println("Indice 1!!!");
                        System.out.println("Evento AuteSimultanea criado!!!");
                        evento = new AlertaAuteSimples(time, alerta.getIndice());
                        break;
                }

            } catch (IOException ex) {
                Logger.getLogger(Tela_GerenciarAlertas.class.getName()).log(Level.SEVERE, null, ex);
            }

            evento.setParametros(gpparam);
            System.out.println("Parametro setado");
            evento.setTitle(jTNomeEvento.getText());
            
            monitor.removerEvento(alerta);
            monitor.anexarEvento(evento);
            
            System.out.println("Evento Anexando...");
            
            DefaultTableModel tbEventos = (DefaultTableModel) jTable_Alertas.getModel();
            String[] infoEvt = {evento.getIndice().toString(), evento.getTitle()};
            tbEventos.addRow(infoEvt);
            
            limparcampos();            

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Intervalo de execução(segundos) inválido.");

        }
        
    }

    private void excluirAlerta(Alerta alerta) {

        monitor.removerEvento(alerta);

    }

    private void inserirDadosNaTabela(String[] dados, DefaultTableModel jTable) {
        jTable.addRow(dados);
    }


    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated

        DefaultTableModel tbEventos = (DefaultTableModel) jTable_Alertas.getModel();

        for (Map.Entry<Integer, Alerta> evento : monitor.getListEvento().entrySet()) {

            String[] infoEvt = {evento.getValue().getIndice().toString(), evento.getValue().getTitle()};
            tbEventos.addRow(infoEvt);

        }

    }//GEN-LAST:event_formInternalFrameActivated

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        if (jTable_Alertas.getSelectedRow() != -1) {

            DefaultTableModel tbAlertas = (DefaultTableModel) jTable_Alertas.getModel();
            int id = Integer.parseInt(tbAlertas.getValueAt(jTable_Alertas.getSelectedRow(), 0).toString());

            for (Map.Entry<Integer, Alerta> alerta : monitor.getListEvento().entrySet()) {
                if (alerta.getKey().equals(id)) {
                    preenchercampos(alerta.getValue());
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "Selecione um alerta a ser editado.");
        }


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        if (jTable_Alertas.getSelectedRow() != -1) {

            DefaultTableModel tbAlertas = (DefaultTableModel) jTable_Alertas.getModel();
            int id = Integer.parseInt(tbAlertas.getValueAt(jTable_Alertas.getSelectedRow(), 0).toString());

            for (Map.Entry<Integer, Alerta> alerta : monitor.getListEvento().entrySet()) {
                if (alerta.getKey().equals(id)) {

                    int opcao = JOptionPane.showOptionDialog(null, "Deseja excluir o alerta '" + alerta.getValue().getTitle() + "'?", "Excluir?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);

                    if (opcao == JOptionPane.YES_OPTION) {

                        excluirAlerta(alerta.getValue());
                        atualizarTabelaAlertas();
                        JOptionPane.showMessageDialog(null, "Alerta '" + alerta.getValue().getTitle() + "' excluído.");
                        break;

                    } else {
                        JOptionPane.showMessageDialog(null, "Alerta não excluído.");
                    }
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "Selecione um alerta a ser excluído.");
        }


    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
          if (jTable_Alertas.getSelectedRow() != -1) {

            DefaultTableModel tbAlertas = (DefaultTableModel) jTable_Alertas.getModel();
            int id = Integer.parseInt(tbAlertas.getValueAt(jTable_Alertas.getSelectedRow(), 0).toString());

            for (Map.Entry<Integer, Alerta> alerta : monitor.getListEvento().entrySet()) {
                if (alerta.getKey().equals(id)) {

                    int opcao = JOptionPane.showOptionDialog(null, "Deseja salvar o alerta '" + alerta.getValue().getTitle() + "'?", "Salvar?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);

                    if (opcao == JOptionPane.YES_OPTION) {

                        salvarAlerta(alerta.getValue());
                        atualizarTabelaAlertas();
                        JOptionPane.showMessageDialog(null, "Alerta salvo com sucesso.");
                        break;

                    } else {
                        JOptionPane.showMessageDialog(null, "Alerta não foi salvo.");
                    }
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "Selecione um alerta para salvar.");
        }

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jCCampo;
    private javax.swing.JComboBox<String> jCOperador;
    private javax.swing.JComboBox<String> jCTipoEvento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPCampos;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTIntervalo;
    private javax.swing.JTextField jTNomeEvento;
    private javax.swing.JTextField jTValor;
    private javax.swing.JTable jTable_Alertas;
    private javax.swing.JTable jTable_Parametros;
    // End of variables declaration//GEN-END:variables

    
}
